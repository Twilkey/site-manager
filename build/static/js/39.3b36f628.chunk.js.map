{"version":3,"file":"static/js/39.3b36f628.chunk.js","mappings":"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","sources":["components/FormField.js","components/FormTextarea.js","functions/getEnvironment.js","functions/getVertical.js","functions/getUserRoles.js","functions/getApprovers.js","requests/RequestAddUser/steps/Step1.js","functions/getSites.js","requests/RequestAddUser/steps/Step2.js","functions/getSite.js","requests/RequestAddUser/steps/Step3.js","requests/RequestAddUser/RequestAddUser.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport { Form } from 'rsuite';\r\n\r\nconst FormField = forwardRef((props, ref) => {\r\n    const { name, message, label, accepter, error, ...rest } = props;\r\n    return (\r\n        <Form.Group controlId={`${name}`} ref={ref} className={error ? 'has-error' : ''}>\r\n            <Form.ControlLabel>{label} </Form.ControlLabel>\r\n            <Form.Control name={name} accepter={accepter} errorMessage={error} {...rest} />\r\n            <Form.HelpText>{message}</Form.HelpText>\r\n        </Form.Group>\r\n    );\r\n});\r\n  \r\nexport default FormField;","import React, { forwardRef } from \"react\";\r\nimport { Input } from 'rsuite';\r\n\r\nconst FormTextarea = forwardRef((props, ref) => {\r\n    return (\r\n        <Input {...props} as=\"textarea\" ref={ref} />\r\n    );\r\n});\r\n  \r\nexport default FormTextarea;","const getEnvironment = (id = null) => {\r\n    let arr = [\r\n        'Production',\r\n        'Staging',\r\n        'Development'\r\n    ];\r\n    if(id === null) {\r\n        return arr;\r\n    } else {\r\n        return arr[id];\r\n    }\r\n}\r\n\r\nexport default getEnvironment;","const getVertical = (id = null) => {\r\n    let arr = [\r\n        'APAC',\r\n        'EMEA',\r\n        'North America'\r\n    ];\r\n    if(id === null) {\r\n        return arr;\r\n    } else {\r\n        return arr[id];\r\n    }\r\n}\r\n\r\nexport default getVertical;","const getUserRoles = (id = null) => {\r\n    let arr = [\r\n        'Subscriber',\r\n        'Contributor',\r\n        'Author',\r\n        'Editor',\r\n        'Administrator'\r\n    ];\r\n    if(id === null) {\r\n        return arr;\r\n    } else {\r\n        return arr[id];\r\n    }\r\n}\r\n\r\nexport default getUserRoles;","const getApprovers = async (Message, toaster) => {\r\n    return await fetch(`${process.env.REACT_APP_BACKEND_URL}?` + new URLSearchParams({\r\n        enviornment: window.location.hostname,\r\n        action: 'get_custom',\r\n        table: 'users',\r\n        where: \"JSON_SEARCH(roles, 'one', 'Manager', NULL, '$[*]') IS NOT NULL\",\r\n        orderby: 'firstname',\r\n        orderbydirec: 'ASC'\r\n    }))\r\n    .then((response) => {\r\n        return response.json();\r\n    })\r\n    .then((result) => {\r\n        return result;\r\n    },\r\n    (error) => {\r\n        console.log(error)\r\n        toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n    });\r\n}\r\n\r\nexport default getApprovers;","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { Form, Input, SelectPicker, CheckPicker, Button, Schema, Message, toaster } from 'rsuite';\r\nimport { AuthContext } from '../../../AuthContext';\r\n\r\nimport FormField from \"../../../components/FormField\";\r\nimport FormTextarea from \"../../../components/FormTextarea\";\r\n\r\nimport getUserRoles from \"../../../functions/getUserRoles\";\r\nimport getApprovers from \"../../../functions/getApprovers\";\r\n\r\nconst { StringType, ArrayType } = Schema.Types;\r\nconst Step1 = (props) => {\r\n    const { userData } = useContext(AuthContext);\r\n\r\n    const modelObj = {\r\n        password: StringType().isRequired('This field is required.'),\r\n        firstname: StringType().isRequired('This field is required.'),\r\n        lastname: StringType().isRequired('This field is required.'),\r\n        email: StringType()\r\n            .isEmail('Please enter a valid email address.')\r\n            .isRequired('This field is required.'),\r\n        roles: StringType().isRequired('This field is required.'),\r\n    }\r\n\r\n    if(userData && !userData.isapprover) {\r\n        modelObj['approvers'] = ArrayType()\r\n                                .minLength(1, 'Please select at least 1 approver.')\r\n                                .isRequired('This field is required.');\r\n    }\r\n\r\n    const model = Schema.Model(modelObj);\r\n\r\n    const { data, buttonText } = props;\r\n    const formRef = useRef();\r\n    const [formError, setFormError] = useState({});\r\n    const [approversSelect, setApproversSelect] = useState([]);\r\n  \r\n    const roleSelect = getUserRoles().map(item => ({ label: item, value: item.toLowerCase() }));\r\n\r\n    useEffect(() => {\r\n        getApprovers(Message, toaster).then((response) => {\r\n            let select = response.map(\r\n                item => ({ \r\n                    label: `${item.firstname} ${item.lastname} (${item.email})`, \r\n                    value: item.id \r\n                })\r\n            );\r\n            setApproversSelect(select);\r\n        });\r\n    }, [userData]);\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                ref={formRef}\r\n                onChange={props.setData}\r\n                onCheck={setFormError}\r\n                formValue={data}\r\n                model={model}\r\n                fluid\r\n            >\r\n                {Object.keys(userData).length > 0 && userData.isapprover && \r\n                    <div className='page-box'>You are automatically approved.</div>\r\n                }\r\n                <div className='page-box'>\r\n                    <div className='page-box-form-input'>\r\n                        <div className='page-box-flex'>\r\n                            <div className='page-box-form-input page-box-flex-child'>\r\n                                <FormField name=\"username\" label=\"Username\" accepter={Input} error={formError.username} readOnly />\r\n                            </div>\r\n                            <div className='page-box-form-input page-box-flex-child'>\r\n                                <FormField name=\"password\" label=\"Password\" accepter={Input} error={formError.password} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='page-box-form-input'>\r\n                        <div className='page-box-flex'>\r\n                            <div className='page-box-form-input page-box-flex-child'>\r\n                                <FormField name=\"firstname\" label=\"First Name\" accepter={Input} error={formError.firstname} onChange={props.updateUsername} />\r\n                            </div>\r\n                            <div className='page-box-form-input page-box-flex-child'>\r\n                                <FormField name=\"lastname\" label=\"Last Name\" accepter={Input} error={formError.lastname} onChange={props.updateUsername} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='page-box-form-input'>\r\n                        <FormField name=\"email\" label=\"Email\" accepter={Input} error={formError.email} />\r\n                    </div>\r\n                    <div className='page-box-form-input'>\r\n                        <FormField name=\"roles\" label=\"Role\" data={roleSelect} accepter={SelectPicker} error={formError.roles} block />\r\n                    </div>\r\n                    {Object.keys(userData).length > 0 && !userData.isapprover && \r\n                        <div className='page-box-form-input'>\r\n                            <FormField name=\"approvers\" label=\"Approvers\" data={approversSelect} accepter={CheckPicker} error={formError.approvers} block sticky />\r\n                        </div>\r\n                    }\r\n                    <div className='page-box-form-input'>\r\n                        <FormField name=\"notes\" label=\"Notes\" accepter={FormTextarea} error={formError.notes} />\r\n                    </div>\r\n                </div>\r\n                <Form.Group>\r\n                    <Button appearance=\"primary\" onClick={() => props.handleSubmit(formRef)}>{buttonText}</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Step1;","const getSites = async (Message, toaster) => {\r\n    return await fetch(`${process.env.REACT_APP_BACKEND_URL}?` + new URLSearchParams({\r\n        enviornment: window.location.hostname,\r\n        action: 'get_custom',\r\n        fields: 'sites.*, domains.domain AS domain_name',\r\n        table: 'sites LEFT JOIN domains on sites.domain = domains.id',\r\n    }))\r\n    .then((response) => {\r\n        return response.json();\r\n    })\r\n    .then((result) => {\r\n        return result;\r\n    },\r\n    (error) => {\r\n        console.log(error)\r\n        toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n    });\r\n}\r\n\r\nexport default getSites;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Form, ButtonToolbar, Button, CheckboxGroup, Checkbox, Schema, Panel, PanelGroup, Message, toaster } from 'rsuite';\r\n\r\nimport getEnvironment from \"../../../functions/getEnvironment\";\r\nimport getVertical from \"../../../functions/getVertical\";\r\nimport getSites from \"../../../functions/getSites\";\r\n\r\nimport FormField from \"../../../components/FormField\";\r\n\r\nconst { ArrayType } = Schema.Types;\r\nconst model = Schema.Model({\r\n    sites: ArrayType()\r\n      .minLength(1, 'Please select at least 1 site.')\r\n      .isRequired('This field is required.'),\r\n});\r\nconst Step2 = (props) => {\r\n    const { sitesData } = props;\r\n    const fetchingComplete = useRef(false);\r\n    const formRef = useRef();\r\n    const [formError, setFormError] = useState({});\r\n    const [data, setData] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        if(fetchingComplete.current === false) {\r\n            getSites(Message, toaster).then((response) => {\r\n                let verticalObject = {};\r\n                response.forEach((data) => {\r\n                    if (!verticalObject[data.vertical]) {\r\n                        verticalObject[data.vertical] = {};\r\n                    }\r\n                    if (!verticalObject[data.vertical][data.domain_name]) {\r\n                        verticalObject[data.vertical][data.domain_name] = {};\r\n                    }\r\n                    verticalObject[data.vertical][data.domain_name][data.environment] = data.id;\r\n                });\r\n\r\n                const verticalArray = Object.entries(verticalObject).map(([verticalKey, verticalValue]) => {\r\n                    const domainsArray = Object.entries(verticalValue).map(([domainKey, domainValue]) => {\r\n                        const environmentsArray = Object.entries(domainValue).map(([environmentKey, environmentValue]) => {\r\n                        return environmentValue;\r\n                        });\r\n                        return { domain: domainKey, environments: environmentsArray };\r\n                    });\r\n                    return { vertical: verticalKey, domains: domainsArray };\r\n                });\r\n                setData(verticalArray);\r\n            });\r\n\r\n            fetchingComplete.current = true;\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                ref={formRef}\r\n                onChange={props.setSitesData}\r\n                onCheck={setFormError}\r\n                formValue={sitesData}\r\n                model={model}\r\n                fluid\r\n            >\r\n                <div className='page-box'>\r\n                    {data && \r\n                        <FormField \r\n                            name=\"sites\" \r\n                            accepter={CheckboxGroup} \r\n                            error={formError.sites} \r\n                        >\r\n                            <></>\r\n                            <PanelGroup accordion defaultActiveKey={0} bordered>\r\n                                {data.map((item, index) => (\r\n                                    <Panel key={index} header={getVertical(item.vertical)} eventKey={index} id={`panel${index}`}>\r\n                                        {item.domains.map((domain, index) => (\r\n                                            <div className=\"flexwrap-3col\" key={index}>\r\n                                                <h4>{domain.domain}</h4>\r\n                                                {Object.entries(domain.environments).map(([environment, site], index) => (\r\n                                                    <div key={index}>\r\n                                                        <Checkbox value={site}>{getEnvironment(environment)}</Checkbox>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        ))}\r\n                                    </Panel>\r\n                                ))}\r\n                            </PanelGroup>\r\n                        </FormField>\r\n                    }\r\n                </div>\r\n                <Form.Group>\r\n                    <ButtonToolbar>\r\n                        <Button appearance=\"primary\" onClick={() => props.handleSubmit(formRef)}>Continue</Button>\r\n                        <Button appearance=\"default\" onClick={props.goBack}>Back</Button>\r\n                    </ButtonToolbar>\r\n                </Form.Group>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Step2;","const getSite = async (id, Message, toaster) => {\r\n    return await fetch(`${process.env.REACT_APP_BACKEND_URL}?` + new URLSearchParams({\r\n        enviornment: window.location.hostname,\r\n        action: 'get_custom',\r\n        fetchtype: 'single',\r\n        table: 'sites',\r\n        where: 'id=:id',\r\n        params: `id:${id}`\r\n    }))\r\n    .then((response) => {\r\n        return response.json();\r\n    })\r\n    .then((result) => {\r\n        return result;\r\n    },\r\n    (error) => {\r\n        console.log(error)\r\n        toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n    });\r\n}\r\n\r\nexport default getSite;","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { Form, Button, Message, toaster } from 'rsuite';\r\nimport { AuthContext } from '../../../AuthContext';\r\n\r\nimport getSite from \"../../../functions/getSite\";\r\n\r\nconst Step3 = (props) => {\r\n    const { userData } = useContext(AuthContext);\r\n    const { data, sitesData } = props;\r\n    const fetchingComplete = useRef(false);\r\n    const [siteList, setSiteList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(fetchingComplete.current === false) {\r\n            sitesData['sites'].forEach((site) => {\r\n                try {\r\n                    fetch(`${process.env.REACT_APP_BACKEND_URL}?` + new URLSearchParams({\r\n                        enviornment: window.location.hostname,\r\n                        action: 'userexists',\r\n                        id: site,\r\n                        username: data.username,\r\n                        useremail: data.email,\r\n                    }))\r\n                    .then((response) => {\r\n                        return response.json();\r\n                    })\r\n                    .then((user) => {\r\n                        let parsedUser = JSON.parse(user);\r\n                        getSite(site).then((userSite) => {\r\n                            setSiteList((siteList) => {\r\n                                const newItem = {\r\n                                    siteid: site,\r\n                                    label: userSite.label,\r\n                                    requestType:\r\n                                        parsedUser.username === false && parsedUser.useremail === false\r\n                                            ? 'add'\r\n                                            : parsedUser.username !== false && parsedUser.useremail === false\r\n                                            ? 'editEmail'\r\n                                            : parsedUser.username === false && parsedUser.useremail !== false\r\n                                            ? 'editUsername'\r\n                                            : parsedUser.same !== false\r\n                                            ? 'editOther'\r\n                                            : parsedUser.username !== false &&\r\n                                              parsedUser.useremail !== false &&\r\n                                              parsedUser.same === false\r\n                                            ? 'conflicting'\r\n                                            : undefined,\r\n                                    data:\r\n                                        parsedUser.username !== false && parsedUser.useremail === false\r\n                                            ? parsedUser.username\r\n                                            : parsedUser.username === false && parsedUser.useremail !== false\r\n                                            ? parsedUser.useremail\r\n                                            : parsedUser.same !== false\r\n                                            ? parsedUser.same\r\n                                            : undefined,\r\n                                };\r\n\r\n                                let checkboxes = {};\r\n                                if (newItem.data !== undefined) {\r\n                                    checkboxes = ['username', 'firstname', 'lastname', 'email', 'roles'].reduce((obj, key) => {\r\n                                        if (data[key] !== newItem.data[key]) {\r\n                                            obj[key] = key;\r\n                                        }\r\n                                        return obj;\r\n                                    }, {});\r\n                                }\r\n                              \r\n                                newItem.checkboxes = checkboxes;\r\n                            \r\n                                return {\r\n                                    ...siteList,\r\n                                    [site]: newItem,\r\n                                };\r\n                            });\r\n                            \r\n                        });\r\n                    },\r\n                    (error) => {\r\n                        console.log(error)\r\n                        toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n                    });\r\n                } catch (error) {\r\n                    console.log(error)\r\n                    toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n                }\r\n            });\r\n\r\n            fetchingComplete.current = true;\r\n        }\r\n        \r\n        console.log(siteList)\r\n    }, [data, sitesData, siteList]);\r\n\r\n    return (\r\n        <>\r\n            <div className='page-box'>\r\n                <h2>Confirmation</h2>\r\n                <div className='page-box-row'>\r\n                    <div className='page-box-flex'>\r\n                        <div className='page-box-flex-child'>\r\n                            <label>Username</label>\r\n                            <div>{data.username}</div>\r\n                        </div>\r\n                        <div className='page-box-flex-child'>\r\n                            <label>Password</label>\r\n                            <div>{data.password}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='page-box-row'>\r\n                    <div className='page-box-flex'>\r\n                        <div className='page-box-flex-child'>\r\n                            <label>First Name</label>\r\n                            <div>{data.firstname}</div>\r\n                        </div>\r\n                        <div className='page-box-flex-child'>\r\n                            <label>Last Name</label>\r\n                            <div>{data.lastname}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='page-box-row'>\r\n                    <label>Email</label>\r\n                    <div>{data.email}</div>\r\n                </div>\r\n                <div className='page-box-row'>\r\n                    <label>Roles</label>\r\n                    <div>{data.roles}</div>\r\n                </div>\r\n                <div className='page-box-row'>\r\n                    <label>Approvers</label>\r\n                    {userData && !userData.isapprover && \r\n                        <div>{data.approvers.join(', ')}</div>\r\n                    }\r\n                    {userData && userData.isapprover && \r\n                        <div>You are automatically the approver</div>\r\n                    }\r\n                </div>\r\n                <div className='page-box-row'>\r\n                    <label>Notes</label>\r\n                    <div>{data.notes}</div>\r\n                </div>\r\n            </div>\r\n            <div className='page-box'>\r\n                {Object.entries(siteList).map((item, index) => {\r\n                    if(item.requestType === 'add') {\r\n                        return (\r\n                            <div className='page-table-row-outter' key={index}>\r\n                                <div className='page-table-row-inner'>\r\n                                    <div className='page-table-column page-table-label'>Add {data.username} to {item.label}</div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    } else if(item.requestType === 'conflicting') {\r\n                        return (\r\n                            <div className='page-table-row-outter' key={index}>\r\n                                <div className='page-table-row-inner'>\r\n                                    <div className='page-table-column page-table-label'>There are multiple conflicting accounts on {item.label}</div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <div className='page-table-row-outter' key={index}>\r\n                                <div className='page-table-row-inner'>\r\n                                    {Object.entries(item.checkboxes).map((checkbox, index) => {\r\n                                        return (\r\n                                            <div key={index}><input type=\"checkbox\" value={checkbox} />{checkbox}</div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n            <Form.Group>\r\n                <Button appearance=\"primary\" onClick={() => props.handleConfirm()}>Confirm</Button>\r\n                <Button appearance=\"default\" onClick={props.goBack}>Back</Button>\r\n            </Form.Group>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Step3;","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Message, toaster } from 'rsuite';\r\nimport { AuthContext } from '../../AuthContext';\r\n\r\nimport Step1 from \"./steps/Step1\";\r\nimport Step2 from \"./steps/Step2\";\r\nimport Step3 from \"./steps/Step3\";\r\n\r\n// import InsertData from \"../../functions/InsertData\";\r\n// import UpdateData from \"../../functions/UpdateData\";\r\n\r\nconst RequestAddUser = (props) => {\r\n    const routeParams = useParams();\r\n    const fetchingComplete = useRef(false);\r\n    const { userData } = useContext(AuthContext);\r\n    const [pageTitle, setPageTitle] = useState('Request User Account');\r\n    const [buttonText, setButtonText] = useState('Select Sites');\r\n    const [currentStep, setCurrentStep] = useState('1');\r\n    const [sitesData, setSitesData] = useState({\r\n        sites: []\r\n    });\r\n    const [data, setData] = useState({\r\n        type: 'useradd',\r\n        requester: userData.userPrincipalName,\r\n        approvers: userData.isapprover ? [userData.userPrincipalName] : [],\r\n        approved: userData.isapprover ? 1 : 0,\r\n        notes: '',\r\n        username: '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        roles: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(fetchingComplete.current === false) {\r\n            if(Object.keys(routeParams).length !== 0 && routeParams.constructor === Object) {\r\n                setButtonText('Save');\r\n\r\n                const getData = async () => {\r\n                    try {\r\n                        await fetch(`${process.env.REACT_APP_BACKEND_URL}?` + new URLSearchParams({\r\n                            enviornment: window.location.hostname,\r\n                            action: 'get_custom',\r\n                            fetchtype: 'single',\r\n                            fields: 'requests.*, sites.label AS site_label',\r\n                            table: \"requests LEFT JOIN sites on JSON_EXTRACT(requests.request, '$.siteid') = sites.id\",\r\n                            where: 'id=:id',\r\n                            params: `id:${routeParams.id}`\r\n                        }))\r\n                        .then((response) => {\r\n                            return response.json();\r\n                        })\r\n                        .then((result) => {\r\n                            setPageTitle('Editing User Account Request');\r\n                            setData((prevData) => ({\r\n                                ...prevData,\r\n                                requester: result.requester,\r\n                                notes: result.notes,\r\n                                site_label: result.site_label,\r\n                                siteid: result.request.siteid,\r\n                                username: result.request.username,\r\n                                password: result.request.password,\r\n                                firstname: result.request.firstname,\r\n                                lastname: result.request.lastname,\r\n                                email: result.request.email,\r\n                                roles: result.request.roles.split(\",\")\r\n                            }));\r\n                        },\r\n                        (error) => {\r\n                            console.log(error)\r\n                            toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                        toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n                    }\r\n                }\r\n\r\n                getData();\r\n            }\r\n            fetchingComplete.current = true;\r\n        }\r\n    }, [routeParams, fetchingComplete]);\r\n\r\n    const updateUsername = () => {\r\n        setData((prevData) => ({\r\n            ...prevData,\r\n            username: prevData.lastname.length > 0 \r\n                        ? prevData.firstname.toLowerCase().replace(/[^a-z0-9]/g, '.')+'.'+prevData.lastname.toLowerCase().replace(/[^a-z0-9]/g, '.')\r\n                        : prevData.firstname.toLowerCase().replace(/[^a-z0-9]/g, '.')\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (formRef) => {\r\n        if(formRef.current.check()) {\r\n            if(routeParams.id) {\r\n                setCurrentStep('3');\r\n            } else {\r\n                if(currentStep === '1') {\r\n                    setCurrentStep('2');\r\n                } else {\r\n                    setCurrentStep('3');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const goBack = () => {\r\n        if(routeParams.id) {\r\n            setCurrentStep('1');\r\n        } else {\r\n            if(currentStep === '3') {\r\n                setCurrentStep('2');\r\n            } else {\r\n                setCurrentStep('1');\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        if(routeParams.id) {\r\n            \r\n        } else {\r\n            \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className='page-title'>\r\n                <h1>{pageTitle}</h1>\r\n            </div>\r\n            {currentStep === '1' && \r\n                <>\r\n                    {routeParams.id && \r\n                        <div>\r\n                            <div>Site:</div>\r\n                            <div>{data.request.site_label}</div>\r\n                        </div>\r\n                    }\r\n                    <Step1 data={data} setData={setData} updateUsername={updateUsername} handleSubmit={handleSubmit} buttonText={buttonText} />\r\n                </>\r\n            }\r\n            {currentStep === '2' && \r\n                <Step2 sitesData={sitesData} setSitesData={setSitesData} handleSubmit={handleSubmit} goBack={goBack} />\r\n            }\r\n            {currentStep === '3' && \r\n                <Step3 data={data} sitesData={sitesData} handleConfirm={handleConfirm} goBack={goBack} />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RequestAddUser;"],"names":["FormField","forwardRef","props","ref","name","message","label","accepter","error","rest","controlId","className","errorMessage","FormTextarea","as","id","arr","getApprovers","Message","toaster","fetch","process","URLSearchParams","enviornment","window","location","hostname","action","table","where","orderby","orderbydirec","then","response","json","result","console","log","push","showIcon","type","duration","Schema","StringType","ArrayType","userData","useContext","AuthContext","modelObj","password","isRequired","firstname","lastname","email","isEmail","roles","isapprover","minLength","model","data","buttonText","formRef","useRef","useState","formError","setFormError","approversSelect","setApproversSelect","roleSelect","getUserRoles","map","item","value","toLowerCase","useEffect","select","Form","onChange","setData","onCheck","formValue","fluid","Object","keys","length","Input","username","readOnly","updateUsername","SelectPicker","block","CheckPicker","approvers","sticky","notes","Button","appearance","onClick","handleSubmit","getSites","fields","sites","sitesData","fetchingComplete","current","verticalObject","forEach","vertical","domain_name","environment","verticalArray","entries","verticalKey","verticalValue","domains","domainKey","domainValue","domain","environments","setSitesData","CheckboxGroup","PanelGroup","accordion","defaultActiveKey","bordered","index","Panel","header","getVertical","eventKey","site","Checkbox","getEnvironment","ButtonToolbar","goBack","getSite","fetchtype","params","siteList","setSiteList","useremail","user","parsedUser","JSON","parse","userSite","newItem","siteid","requestType","same","undefined","checkboxes","reduce","obj","key","join","checkbox","handleConfirm","routeParams","useParams","pageTitle","setPageTitle","setButtonText","currentStep","setCurrentStep","requester","userPrincipalName","approved","constructor","getData","prevData","site_label","request","split","check","replace"],"sourceRoot":""}