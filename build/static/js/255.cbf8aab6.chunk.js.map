{"version":3,"file":"static/js/255.cbf8aab6.chunk.js","mappings":"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","sources":["components/FormField.js","pages/SearchUsers.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport { Form } from 'rsuite';\r\n\r\nconst FormField = forwardRef((props, ref) => {\r\n    const { name, message, label, accepter, error, ...rest } = props;\r\n    return (\r\n        <Form.Group controlId={`${name}`} ref={ref} className={error ? 'has-error' : ''}>\r\n            <Form.ControlLabel>{label} </Form.ControlLabel>\r\n            <Form.Control name={name} accepter={accepter} errorMessage={error} {...rest} />\r\n            <Form.HelpText>{message}</Form.HelpText>\r\n        </Form.Group>\r\n    );\r\n});\r\n  \r\nexport default FormField;","import React, { useState, useRef } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Message, toaster, Form, Input, Button } from 'rsuite';\r\n\r\nimport FormField from \"../components/FormField\";\r\n\r\nconst SearchUsers = (props) => {\r\n    const formRef = useRef();\r\n    const [usersitesdata, setUserSitesData] = useState(null);\r\n    const [formError, setFormError] = useState({});\r\n\r\n    const [data, setData] = useState({\r\n        search: \"\"\r\n    });\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await fetch(`${process.env.REACT_APP_BACKEND_URL}?` + new URLSearchParams({\r\n            enviornment: window.location.hostname,\r\n            action: 'get_custom',\r\n            fields: 'sites.*, domains.domain AS domain_name',\r\n            table: 'sites LEFT JOIN domains on sites.domain = domains.id, JSON_TABLE(sites.users, \"$[*]\" COLUMNS(user_email VARCHAR(100) PATH \"$.user_email\")) as user_email',\r\n            where: 'user_email=:user_email',\r\n            params: `user_email:${data.search}`\r\n        }))\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((result) => {\r\n            setUserSitesData(result);\r\n        },\r\n        (error) => {\r\n            console.log(error)\r\n            toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='page-title'>\r\n                <h1>Search Sites Users</h1>\r\n            </div>\r\n            <Form\r\n                ref={formRef}\r\n                onChange={setData}\r\n                onCheck={setFormError}\r\n                fluid\r\n            >\r\n                <div className='page-box'>\r\n                    <div className='page-box-form-input'>\r\n                        <FormField name=\"search\" label=\"Search\" accepter={Input} error={formError.search} />\r\n                    </div>\r\n                    <Form.Group>\r\n                        <Button appearance=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n            {usersitesdata && \r\n                <div className='page-table'>\r\n                    <div className='page-table-head'>\r\n                        <div className='page-table-column page-table-label'>Site</div>\r\n                        <div className='page-table-column page-table-label'>Domain</div>\r\n                        <div className='page-table-column page-table-label'>Name</div>\r\n                        <div className='page-table-column page-table-label'>Username</div>\r\n                        <div className='page-table-column page-table-label'>Roles</div>\r\n                        <div className='page-table-column page-table-label'>Frontend</div>\r\n                        <div className='page-table-column page-table-label'>Backend</div>\r\n                    </div>\r\n                    {Object.entries(usersitesdata).map((site, index) => {\r\n                        let siteData = site[1];\r\n                        let userdata = JSON.parse(siteData.users).find(u => u.user_email === data.search);\r\n\r\n                        return (\r\n                            <div className='page-table-row-outter' key={index}>\r\n                                <div className='page-table-row-inner'>\r\n                                    <div className='page-table-column page-table-label'><Link to={`/site/${siteData.id}`}>{siteData.label}</Link></div>\r\n                                    <div className='page-table-column page-table-label'><Link to={`/site/list/${siteData.domain}`}>{siteData.domain_name}</Link></div>\r\n                                    <div className='page-table-column'>{userdata.display_name}</div>\r\n                                    <div className='page-table-column'>{userdata.user_login}</div>\r\n                                    <div className='page-table-column'>{userdata.roles.join(', ')}</div>\r\n                                    <div className='page-table-column'><a href={data.url} target=\"_blank\" rel=\"noreferrer\">Visit</a></div>\r\n                                    <div className='page-table-column'><a href={data.adminurl} target=\"_blank\" rel=\"noreferrer\">Visit</a></div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchUsers;"],"names":["FormField","forwardRef","props","ref","name","message","label","accepter","error","rest","controlId","className","errorMessage","formRef","useRef","useState","usersitesdata","setUserSitesData","formError","setFormError","search","data","setData","handleSubmit","event","preventDefault","fetch","process","URLSearchParams","enviornment","window","location","hostname","action","fields","table","where","params","then","response","json","result","console","log","toaster","showIcon","type","duration","onChange","onCheck","fluid","Input","appearance","onClick","Object","entries","map","site","index","siteData","userdata","JSON","parse","users","find","u","user_email","to","id","domain","domain_name","display_name","user_login","roles","join","href","url","target","rel","adminurl"],"sourceRoot":""}