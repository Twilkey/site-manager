{"version":3,"file":"static/js/175.ad462cac.chunk.js","mappings":"qOAmBA,EAjBuB,SAACA,GACpB,IAAMC,EAAmBC,aAAaC,QAAQ,iBACxCC,EAAgBC,KAAKC,MAAML,GAEjC,OACI,gBAAKM,UAAU,YAAW,UACtB,iBAAKA,UAAU,gBAAe,WAC1B,kBAAOC,KAAK,WAAWD,UAAU,WAAWE,KAAMT,EAAMU,MAAOC,GAAIX,EAAMU,MAAOE,SAAUZ,EAAMa,eAAgBC,QAAUV,GAAiBA,EAAcW,SAAW,UAAY,MAChL,mBAAOR,UAAU,QAAQS,QAAShB,EAAMU,MAAM,WAC1C,iBAAMH,UAAU,WAChB,iBAAMA,UAAU,kBAKpC,E,iCC4CA,EAnDoB,SAACP,GACpB,IAAMiB,GAAWC,EAAAA,EAAAA,MACd,GAAkCC,EAAAA,EAAAA,UAASF,EAASG,UAAS,eAAtDC,EAAS,KAAEC,EAAY,KAG1BC,EADkBN,EAASG,SAASI,MAAM,KACX,GAEnC,OACI,gBAAKjB,UAAU,UAAS,UACpB,SAACkB,EAAA,EAAO,CAACC,UAAU,EAAMC,gBAAiB,CAACJ,GAAgB,UACvD,UAACE,EAAA,OAAY,YACT,UAACG,EAAA,EAAG,CAACP,UAAWA,EAAWQ,SAAUP,EAAa,WAC9C,SAACM,EAAA,OAAQ,CAACE,SAAS,aAAaC,MAAM,SAACC,EAAA,EAAa,IAAKC,KAAK,aAAY,SAAC,eAC3E,UAACL,EAAA,OAAQ,CAACE,SAAS,OAAOI,MAAM,QAAQH,MAAM,SAACI,EAAA,EAAS,IAAI,WACxD,SAACP,EAAA,OAAQ,CAACE,SAAS,aAAaG,KAAK,aAAY,SAAC,eAClD,SAACL,EAAA,OAAQ,CAACE,SAAS,YAAYG,KAAK,YAAW,SAAC,iBAEpD,UAACL,EAAA,OAAQ,CAACE,SAAS,SAASI,MAAM,UAAUH,MAAM,SAACI,EAAA,EAAS,IAAI,WAC5D,SAACP,EAAA,OAAQ,CAACE,SAAS,eAAeG,KAAK,eAAc,SAAC,iBACtD,SAACL,EAAA,OAAQ,CAACE,SAAS,yBAAyBG,KAAK,yBAAwB,SAAC,mBAE9E,UAACL,EAAA,OAAQ,CAACE,SAAS,OAAOI,MAAM,QAAQH,MAAM,SAACI,EAAA,EAAS,IAAI,WACxD,SAACP,EAAA,OAAQ,CAACE,SAAS,aAAaG,KAAK,aAAY,SAAC,eAClD,SAACL,EAAA,OAAQ,CAACE,SAAS,mBAAmBG,KAAK,mBAAkB,SAAC,gBAC9D,SAACL,EAAA,OAAQ,CAACE,SAAS,oBAAoBG,KAAK,oBAAmB,SAAC,iBAChE,SAACL,EAAA,OAAQ,CAACE,SAAS,kBAAkBG,KAAK,kBAAiB,SAAC,kBAEhE,UAACL,EAAA,OAAQ,CAACE,SAAS,OAAOI,MAAM,QAAQH,MAAM,SAACK,EAAA,EAAS,IAAI,WACxD,SAACR,EAAA,OAAQ,CAACE,SAAS,aAAaG,KAAK,aAAY,SAAC,eAClD,SAACL,EAAA,OAAQ,CAACE,SAAS,YAAYG,KAAK,YAAW,SAAC,iBAEpD,UAACL,EAAA,OAAQ,CAACE,SAAS,UAAUI,MAAM,UAAUH,MAAM,SAACK,EAAA,EAAS,IAAI,WAC7D,SAACR,EAAA,OAAQ,CAACE,SAAS,gBAAgBG,KAAK,gBAAe,SAAC,kBACxD,SAACL,EAAA,OAAQ,CAACE,SAAS,oBAAoBG,KAAK,oBAAmB,SAAC,qBAEpE,SAACL,EAAA,OAAQ,CAACE,SAAS,SAASI,MAAM,SAASH,MAAM,SAACK,EAAA,EAAS,IAAI,UAC3D,SAACR,EAAA,OAAQ,CAACE,SAAS,gBAAgBG,KAAK,gBAAe,SAAC,aAG5D,UAACL,EAAA,OAAQ,CAACE,SAAS,OAAOI,MAAM,OAAOH,MAAM,SAACI,EAAA,EAAS,IAAI,WACvD,SAACP,EAAA,OAAQ,CAACE,SAAS,0BAA0BG,KAAK,0BAAyB,SAAC,uBAC5E,SAACL,EAAA,OAAQ,CAACE,SAAS,gBAAgBG,KAAK,gBAAe,SAAC,mBAGhE,SAAC,EAAc,CAACvB,MAAM,YAAYG,eAAgBb,EAAMa,uBAK5E,EC5CA,EAXe,SAACb,GACZ,OACI,iBAAKO,UAAU,OAAM,WACjB,SAAC,EAAW,CAACM,eAAgBb,EAAMa,kBACnC,gBAAKN,UAAU,UAAS,UACpB,SAAC,KAAM,QAIvB,C","sources":["components/DarkmodeSwitch.js","components/SidebarMenu.js","pages/Layout.js"],"sourcesContent":["import React from \"react\";\r\n  \r\nconst DarkmodeSwitch = (props) => {\r\n    const getlocalSettings = localStorage.getItem(\"localSettings\");\r\n    const localSettings = JSON.parse(getlocalSettings);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"toggle-switch\">\r\n                <input type=\"checkbox\" className=\"checkbox\" name={props.label} id={props.label} onChange={props.toggleDarkmode} checked={(localSettings && localSettings.darkmode ? \"checked\" : \"\")} />\r\n                <label className=\"label\" htmlFor={props.label}>\r\n                    <span className=\"inner\" />\r\n                    <span className=\"switch\" />\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default DarkmodeSwitch;","import React, { useState } from 'react';\r\nimport { Sidenav, Nav } from 'rsuite';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport DarkmodeSwitch from \"./DarkmodeSwitch\";\r\n\r\nimport DashboardIcon from '@rsuite/icons/legacy/Dashboard';\r\nimport GroupIcon from '@rsuite/icons/legacy/Group';\r\nimport MagicIcon from '@rsuite/icons/legacy/Magic';\r\n\r\nconst SidebarMenu = (props) => {\r\n\tconst location = useLocation();\r\n    const [activeKey, setActiveKey] = useState(location.pathname);\r\n\r\n    const pathnameArray = location.pathname.split(\"/\");\r\n    let defaultOpenKey = pathnameArray[1];\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Sidenav expanded={true} defaultOpenKeys={[defaultOpenKey]}>\r\n                <Sidenav.Body>\r\n                    <Nav activeKey={activeKey} onSelect={setActiveKey}>\r\n                        <Nav.Item eventKey=\"/dashboard\" icon={<DashboardIcon />} href=\"/dashboard\">Dashboard</Nav.Item>\r\n                        <Nav.Menu eventKey=\"post\" title=\"Posts\" icon={<MagicIcon />}>\r\n                            <Nav.Item eventKey=\"/post/list\" href=\"/post/list\">Post List</Nav.Item>\r\n                            <Nav.Item eventKey=\"/post/add\" href=\"/post/add\">Add Post</Nav.Item>\r\n                        </Nav.Menu>\r\n                        <Nav.Menu eventKey=\"domain\" title=\"Domains\" icon={<MagicIcon />}>\r\n                            <Nav.Item eventKey=\"/domain/list\" href=\"/domain/list\">All Domains</Nav.Item>\r\n                            <Nav.Item eventKey=\"/domain/registrar/list\" href=\"/domain/registrar/list\">Registrars</Nav.Item>\r\n                        </Nav.Menu>\r\n                        <Nav.Menu eventKey=\"site\" title=\"Sites\" icon={<MagicIcon />}>\r\n                            <Nav.Item eventKey=\"/site/list\" href=\"/site/list\">Site List</Nav.Item>\r\n                            <Nav.Item eventKey=\"/site/theme/list\" href=\"/site/theme/list\">Theme List</Nav.Item>\r\n                            <Nav.Item eventKey=\"/site/plugin/list\" href=\"/site/plugin/list\">Plugin List</Nav.Item>\r\n                            <Nav.Item eventKey=\"/site/user/list\" href=\"/site/user/list\">User List</Nav.Item>\r\n                        </Nav.Menu>\r\n                        <Nav.Menu eventKey=\"user\" title=\"Users\" icon={<GroupIcon />}>\r\n                            <Nav.Item eventKey=\"/user/list\" href=\"/user/list\">User List</Nav.Item>\r\n                            <Nav.Item eventKey=\"/user/add\" href=\"/user/add\">Add User</Nav.Item>\r\n                        </Nav.Menu>\r\n                        <Nav.Menu eventKey=\"request\" title=\"Request\" icon={<GroupIcon />}>\r\n                            <Nav.Item eventKey=\"/request/list\" href=\"/request/list\">Request List</Nav.Item>\r\n                            <Nav.Item eventKey=\"/request/add/user\" href=\"/request/add/user\">Request User</Nav.Item>\r\n                        </Nav.Menu>\r\n                        <Nav.Menu eventKey=\"search\" title=\"Search\" icon={<GroupIcon />}>\r\n                            <Nav.Item eventKey=\"/search/users\" href=\"/search/users\">Users</Nav.Item>\r\n                        </Nav.Menu>\r\n                        {/* <Nav.Item eventKey=\"/github/teams/CatenaUS\" icon={<GroupIcon />} href=\"/github/teams/CatenaUS\">Github Teams</Nav.Item> */}\r\n                        <Nav.Menu eventKey=\"misc\" title=\"Misc\" icon={<MagicIcon />}>\r\n                            <Nav.Item eventKey=\"/misc/non-company-users\" href=\"/misc/non-company-users\">Non-Company Users</Nav.Item>\r\n                            <Nav.Item eventKey=\"/misc/scripts\" href=\"/misc/scripts\">Scripts</Nav.Item>\r\n                        </Nav.Menu>\r\n                    </Nav>\r\n                    <DarkmodeSwitch label=\"Dark Mode\" toggleDarkmode={props.toggleDarkmode} />\r\n                </Sidenav.Body>\r\n            </Sidenav>\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default SidebarMenu;","import { Outlet } from \"react-router-dom\";\r\n\r\nimport SidebarMenu from \"../components/SidebarMenu\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div className=\"page\">\r\n            <SidebarMenu toggleDarkmode={props.toggleDarkmode} />\r\n            <div className=\"content\">\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;"],"names":["props","getlocalSettings","localStorage","getItem","localSettings","JSON","parse","className","type","name","label","id","onChange","toggleDarkmode","checked","darkmode","htmlFor","location","useLocation","useState","pathname","activeKey","setActiveKey","defaultOpenKey","split","Sidenav","expanded","defaultOpenKeys","Nav","onSelect","eventKey","icon","Dashboard","href","title","Magic","Group"],"sourceRoot":""}