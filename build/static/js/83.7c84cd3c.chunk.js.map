{"version":3,"file":"static/js/83.7c84cd3c.chunk.js","mappings":"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","sources":["components/FormField.js","functions/InsertData.js","functions/UpdateData.js","pages/UsersAdd.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport { Form } from 'rsuite';\r\n\r\nconst FormField = forwardRef((props, ref) => {\r\n    const { name, message, label, accepter, error, ...rest } = props;\r\n    return (\r\n        <Form.Group controlId={`${name}`} ref={ref} className={error ? 'has-error' : ''}>\r\n            <Form.ControlLabel>{label} </Form.ControlLabel>\r\n            <Form.Control name={name} accepter={accepter} errorMessage={error} {...rest} />\r\n            <Form.HelpText>{message}</Form.HelpText>\r\n        </Form.Group>\r\n    );\r\n});\r\n  \r\nexport default FormField;","const InsertData = async (toaster, Message, action, table, params) => {\r\n    var formData = new FormData();\r\n    formData.append('action', action);\r\n    formData.append('enviornment', window.location.hostname);\r\n    if(table !== null) {\r\n        formData.append('table', table);\r\n    }\r\n    formData.append('params', JSON.stringify(params));\r\n\r\n    return await fetch(`${process.env.REACT_APP_BACKEND_URL}`, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: formData\r\n    })\r\n    .then((response) => {\r\n        if (!response.ok) {\r\n            toaster.push(<Message showIcon type=\"error\">Network response was not OK</Message>, { duration: 3000 });\r\n            throw new Error(\"Network response was not OK\");\r\n        }\r\n        return response.json();\r\n    })\r\n    .then((result) => {\r\n        return result;\r\n    })\r\n    .catch((error) => {\r\n        toaster.push(<Message showIcon type=\"error\">There has been a problem with your fetch operation: {error}</Message>, { duration: 3000 });\r\n    });\r\n}\r\n\r\nexport default InsertData;","const UpdateData = async (toaster, Message, action, table, params, where, title) => {\r\n    var formData = new FormData();\r\n    formData.append('action', action);\r\n    formData.append('enviornment', window.location.hostname);\r\n    if(table !== null) {\r\n        formData.append('table', table);\r\n    }\r\n    if(where !== null) {\r\n        formData.append('where', where);\r\n    }\r\n    formData.append('params', JSON.stringify(params));\r\n\r\n    await fetch(`${process.env.REACT_APP_BACKEND_URL}`, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: formData\r\n    })\r\n    .then((response) => {\r\n        if (!response.ok) {\r\n            toaster.push(<Message showIcon type=\"error\">Network response was not OK</Message>, { duration: 3000 });\r\n            throw new Error(\"Network response was not OK\");\r\n        }\r\n        return response.json();\r\n    })\r\n    .then((result) => {\r\n        toaster.push(<Message showIcon type=\"success\">{title} was successfully updated</Message>, { duration: 3000 });\r\n        return result;\r\n    })\r\n    .catch((error) => {\r\n        toaster.push(<Message showIcon type=\"error\">There has been a problem with your fetch operation: {error}</Message>, { duration: 3000 });\r\n        console.error(\"There has been a problem with your fetch operation:\", error);\r\n    });\r\n}\r\n\r\nexport default UpdateData;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Message, toaster, Form, Input, CheckPicker, Button, Schema } from 'rsuite';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport InsertData from \"../functions/InsertData\";\r\nimport UpdateData from \"../functions/UpdateData\";\r\n\r\nimport FormField from \"../components/FormField\";\r\n\r\nconst { StringType, ArrayType } = Schema.Types;\r\nconst model = Schema.Model({\r\n    firstname: StringType().isRequired('This field is required.'),\r\n    lastname: StringType().isRequired('This field is required.'),\r\n    email: StringType()\r\n    .isEmail('Please enter a valid email address.')\r\n    .isRequired('This field is required.'),\r\n    roles: ArrayType()\r\n      .minLength(1, 'Please select at least 1 role.')\r\n      .isRequired('This field is required.'),\r\n});\r\n\r\nconst UsersAdd = (props) => {\r\n    const routeParams = useParams();\r\n    const formRef = useRef();\r\n    const fetchingComplete = useRef(false);\r\n    const [pageTitle, setpageTitle] = useState('Add User');\r\n    const [formError, setFormError] = useState({});\r\n    const [data, setData] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        roles: []\r\n    });\r\n  \r\n    const roleSelect = ['Administrator', 'Engineer', 'Manager'].map(\r\n        item => ({ label: item, value: item })\r\n    );\r\n\r\n    useEffect(() => {\r\n        if(fetchingComplete.current === false) {\r\n            if(Object.keys(routeParams).length !== 0 && routeParams.constructor === Object) {\r\n                const getData = async () => {\r\n                    try {\r\n                        await fetch(`${process.env.REACT_APP_BACKEND_URL}?` + new URLSearchParams({\r\n                            enviornment: window.location.hostname,\r\n                            action: 'get_custom',\r\n                            fetchtype: 'single',\r\n                            table: 'users',\r\n                            where: 'id=:id',\r\n                            params: `id:${routeParams.id}`\r\n                        }))\r\n                        .then((response) => {\r\n                            return response.json();\r\n                        })\r\n                        .then((result) => {\r\n                            setpageTitle('Editing '+result.firstname+' '+result.lastname);\r\n                            setData({\r\n                                firstname: result.firstname,\r\n                                lastname: result.lastname,\r\n                                email: result.email,\r\n                                roles: Object.values(JSON.parse(result.roles))\r\n                            });\r\n                        },\r\n                        (error) => {\r\n                            console.log(error)\r\n                            toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(error)\r\n                        toaster.push(<Message showIcon type=\"error\">{error.message}</Message>, { duration: 3000 });\r\n                    }\r\n                }\r\n\r\n                getData();\r\n            }\r\n            fetchingComplete.current = true;\r\n        }\r\n    }, [routeParams, data]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(formRef.current.check()) {\r\n            if(routeParams.id) {\r\n                await UpdateData(\r\n                    toaster, \r\n                    Message,\r\n                    'update_custom', \r\n                    'users', \r\n                    {\r\n                        id: routeParams.id,\r\n                        firstname: data.firstname,\r\n                        lastname: data.lastname,\r\n                        email: data.email,\r\n                        roles: JSON.stringify(data.roles.filter(Boolean)),\r\n                    }, \r\n                    'id=:id', \r\n                    pageTitle\r\n                );\r\n            } else {\r\n                await InsertData(\r\n                    toaster, \r\n                    Message,\r\n                    'insert_custom', \r\n                    'users', \r\n                    {\r\n                        firstname: data.firstname,\r\n                        lastname: data.lastname,\r\n                        email: data.email,\r\n                        roles: JSON.stringify(data.roles.filter(Boolean)),\r\n                    }, \r\n                    '/user/list'\r\n                );\r\n            }\r\n        } else {\r\n            console.log(formError)\r\n            toaster.push(<Message showIcon type=\"error\"><pre>{JSON.stringify(formError)}</pre></Message>, { duration: 3000 });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                ref={formRef}\r\n                onChange={setData}\r\n                onCheck={setFormError}\r\n                formValue={data}\r\n                model={model}\r\n                fluid\r\n            >\r\n                <div className='page-title'>\r\n                    <h1>{pageTitle}</h1>\r\n                </div>\r\n                <div className='page-box'>\r\n                    <div className='page-box-form-input'>\r\n                        <div className='page-box-flex'>\r\n                            <div className='page-box-form-input page-box-flex-child'>\r\n                                <FormField name=\"firstname\" label=\"First Name\" accepter={Input} error={formError.firstname} />\r\n                            </div>\r\n                            <div className='page-box-form-input page-box-flex-child'>\r\n                                <FormField name=\"lastname\" label=\"Last Name\" accepter={Input} error={formError.lastname} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='page-box-form-input'>\r\n                        <FormField name=\"email\" label=\"Email\" accepter={Input} error={formError.email} />\r\n                    </div>\r\n                    <div className='page-box-form-input'>\r\n                        <FormField name=\"roles\" label=\"Roles\" data={roleSelect} accepter={CheckPicker} error={formError.roles} block sticky />\r\n                    </div>\r\n                </div>\r\n                <Form.Group>\r\n                    <Button appearance=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UsersAdd;"],"names":["FormField","forwardRef","props","ref","name","message","label","accepter","error","rest","controlId","className","errorMessage","InsertData","toaster","Message","action","table","params","formData","FormData","append","window","location","hostname","JSON","stringify","fetch","process","method","mode","body","then","response","ok","push","showIcon","type","duration","Error","json","result","catch","UpdateData","where","title","console","Schema","StringType","ArrayType","model","firstname","isRequired","lastname","email","isEmail","roles","minLength","routeParams","useParams","formRef","useRef","fetchingComplete","useState","pageTitle","setpageTitle","formError","setFormError","data","setData","roleSelect","map","item","value","useEffect","current","Object","keys","length","constructor","getData","URLSearchParams","enviornment","fetchtype","id","values","parse","log","handleSubmit","event","preventDefault","check","filter","Boolean","onChange","onCheck","formValue","fluid","Input","CheckPicker","block","sticky","appearance","onClick"],"sourceRoot":""}